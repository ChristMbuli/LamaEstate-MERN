// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  fname      String      @unique
  email      String      @unique
  profil     String?
  password   String
  houses     House[]
  createdAt  DateTime    @default(now())
  SavedHouse SavedHouse?
}

model House {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String       @unique
  price       Int
  address     String
  city        String
  district    String
  bedroom     Int
  bathroom    Int
  latitude    String
  longitude   String
  images      String[]
  type        Type
  property    Property
  createdAt   DateTime     @default(now())
  User        User?        @relation(fields: [userId], references: [id])
  userId      String?      @db.ObjectId
  houseDetail HouseDetail?
  SavedHouse  SavedHouse?
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model HouseDetail {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  house      House   @relation(fields: [houseId], references: [id])
  houseId    String  @unique @db.ObjectId
}

model SavedHouse {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  house     House    @relation(fields: [houseId], references: [id])
  userId    String   @unique @db.ObjectId
  houseId   String   @unique @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, houseId])
}
